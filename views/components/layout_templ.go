// Code generated by templ - DO NOT EDIT.

// templ: version: v0.3.857
package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import "github.com/Tottitov/todo/internal/models"

func Layout(todos []models.Todo) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 1, "<html><head><title>Tony's Todo App</title><!-- Tailwind CSS --><script src=\"https://cdn.tailwindcss.com\"></script><!-- HTMX --><script src=\"https://unpkg.com/htmx.org@1.9.12\"></script><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></head><body class=\"min-h-screen bg-gray-900 p-4 sm:p-6 text-white\"><div class=\"max-w-md mx-auto\"><h1 class=\"text-3xl font-bold mb-6 text-blue-400\">Tony's Todo App</h1><div id=\"error-box\" class=\"text-red-500 text-sm mb-2\"></div><form class=\"flex gap-2 mb-6\" hx-post=\"/todos\" hx-target=\"#todo-list\" hx-swap=\"beforeend\" hx-on=\"\n\t\t\t\t\t\thtmx:afterSwap: handleSuccess();\n\t\t\t\t\t\thtmx:responseError: handleError()\n\t\t\t\t\t\"><input id=\"todo-input\" class=\"bg-gray-800 border border-gray-700 text-gray-200 px-4 py-3 rounded-lg w-full focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-transparent\" type=\"text\" name=\"title\" placeholder=\"What needs to be done?\" required oninput=\"clearError()\"> <button class=\"bg-blue-600 hover:bg-blue-500 text-white px-5 py-3 rounded-lg font-medium transition-colors\" type=\"submit\">Add</button></form><div id=\"todo-list\" class=\"flex flex-col gap-0\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, todo := range todos {
			templ_7745c5c3_Err = TodoItem(todo).Render(ctx, templ_7745c5c3_Buffer)
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		templ_7745c5c3_Err = templruntime.WriteString(templ_7745c5c3_Buffer, 2, "</div></div><script>\n\t\t\t\tfunction handleError() {\n\t\t\t\t\tdocument.querySelector('#error-box').textContent = 'Todo already exists'\n\t\t\t\t\tdocument.querySelector('#todo-input').value = ''\n\t\t\t\t}\n\t\t\t\tfunction handleSuccess() {\n\t\t\t\t\tdocument.querySelector('#error-box').textContent = ''\n\t\t\t\t\tdocument.querySelector('#todo-input').value = ''\n\t\t\t\t}\n\t\t\t\tfunction clearError() {\n\t\t\t\t\tdocument.querySelector('#error-box').textContent = ''\n\t\t\t\t}\n\t\t\t</script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return nil
	})
}

var _ = templruntime.GeneratedTemplate
